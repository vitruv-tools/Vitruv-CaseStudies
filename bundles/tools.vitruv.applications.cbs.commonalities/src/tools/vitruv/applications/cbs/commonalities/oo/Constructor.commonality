import tools.vitruv.applications.cbs.commonalities.java.operators._
import tools.vitruv.applications.cbs.commonalities.uml.operators._

import "http://www.eclipse.org/uml2/5.0.0/UML" as UML
import "http://www.emftext.org/java" as Java

concept ObjectOrientedDesign

// Externally contained by ObjectOrientedDesign:Class.constructors
referenced commonality Constructor {

	// Externally contained by UML:Class.ownedOperation
	with UML:Operation
	whereat {
		<- Operation.name isUmlContainerName
	}

	// Externally contained by Java:Class.members
	with Java:Constructor
	whereat {
		<- Constructor.name isJavaContainerName
	}

	// TODO: Enforcing the participation conditions does not work, because the objects will not have been inserted into
	// their container at the time of enforcement. So we propagate the name via this attribute.
	has name {
		= UML:Operation.name

		= Java:Constructor.name
	}

	has visibility {
		= umlVisibility(UML:Operation.visibility)

		= javaVisibility(Java:Constructor.annotationsAndModifiers, Java:Constructor)
	}

	has parameters referencing ObjectOrientedDesign:MethodParameter {
		// Note: The referenced participation only accepts input parameters.
		= UML:Operation.ownedParameter

		= Java:Constructor.parameters
	}
}
